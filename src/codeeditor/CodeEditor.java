package codeeditor;

import java.awt.GridLayout;
import java.io.*;
import javax.swing.*;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.text.DefaultEditorKit;
/*
 * To change this template, choose Tools | Templates and open the template in
 * the editor.
 */

/**
 *
 * @author norps
 */
public class CodeEditor extends javax.swing.JFrame {

     Tab t;
    private int tabCount=1;
    private JFileChooser fc = new JFileChooser();
    /**
     * Creates new form CodeEditor
     */
    public CodeEditor() {
        initComponents();
        
        
        mnuEditUndo= new JMenuItem();
        mnuEdit.add(mnuEditUndo);
        
        mnuEditRedo= new JMenuItem();
        mnuEdit.add(mnuEditRedo);
        
        mnuEdit.add(mnuEditSeperator);
        
        newTab();
        
        JMenuItem mnuEditCut= new JMenuItem();
        mnuEditCut.setAction(t.getActionByName(DefaultEditorKit.cutAction));
        mnuEditCut.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_X, java.awt.event.InputEvent.CTRL_MASK));
        mnuEditCut.setText("Cut");
        mnuEdit.add(mnuEditCut);
        
        JMenuItem mnuEditCopy= new JMenuItem();
        mnuEditCopy.setAction(t.getActionByName(DefaultEditorKit.copyAction));
        mnuEditCopy.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_C, java.awt.event.InputEvent.CTRL_MASK));
        mnuEditCopy.setText("Copy");
        mnuEdit.add(mnuEditCopy);
        
        JMenuItem mnuEditPaste= new JMenuItem();
         mnuEditPaste.setAction(t.getActionByName(DefaultEditorKit.pasteAction));
        mnuEditPaste.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_V, java.awt.event.InputEvent.CTRL_MASK));
        mnuEditPaste.setText("Paste");
        mnuEdit.add(mnuEditPaste);
        
        JMenuItem mnuEditSelectAll= new JMenuItem();
        mnuEditSelectAll.setAction(t.getActionByName(DefaultEditorKit.selectAllAction));
        mnuEditSelectAll.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.CTRL_MASK));
        mnuEditSelectAll.setText("Select All");
        mnuEdit.add(mnuEditSelectAll);
    }
    
    private void setLineNumber(JTextPane text, int line) {
        int currentLine = 1;
        int currentSelection = 1;
        String textContent = text.getText();
        text.setCaretPosition(0);
        String seperator = System.getProperty("line.separator");
        int seperatorLength = seperator.length();
        while (currentLine < line) {
            int next = textContent.indexOf(seperator,currentSelection);
            if (next > -1) {
                currentSelection = next + seperatorLength;
                currentLine++;
            } else {
                // set to the end of doc
                currentSelection = textContent.length();
                currentLine= line; // exits loop
            }
        }
        text.setCaretPosition(currentSelection);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        tabMain = new javax.swing.JTabbedPane();
        mnuMain = new javax.swing.JMenuBar();
        mnuFile = new javax.swing.JMenu();
        mnuFileNew = new javax.swing.JMenuItem();
        mnuFileOpen = new javax.swing.JMenuItem();
        mnuFileSave = new javax.swing.JMenuItem();
        mnuFileSaveAs = new javax.swing.JMenuItem();
        mnuFileClose = new javax.swing.JMenuItem();
        mnuFileCloseAll = new javax.swing.JMenuItem();
        mnuFileCloseAllButActiveDocument = new javax.swing.JMenuItem();
        mnuSeperator = new javax.swing.JPopupMenu.Separator();
        mnuFileExit = new javax.swing.JMenuItem();
        mnuEdit = new javax.swing.JMenu();
        mnuEditSeperator = new javax.swing.JPopupMenu.Separator();
        mnuSearch = new javax.swing.JMenu();
        mnuSearchFind = new javax.swing.JMenuItem();
        mnuSearchReplace = new javax.swing.JMenuItem();
        mnuSearchGoTo = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Code Editor");
        setExtendedState(JFrame.MAXIMIZED_BOTH);
        setName("MainUI");
        addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                formMouseClicked(evt);
            }
        });
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentResized(java.awt.event.ComponentEvent evt) {
                formComponentResized(evt);
            }
        });
        addMouseMotionListener(new java.awt.event.MouseMotionAdapter() {
            public void mouseDragged(java.awt.event.MouseEvent evt) {
                formMouseDragged(evt);
            }
        });
        addWindowStateListener(new java.awt.event.WindowStateListener() {
            public void windowStateChanged(java.awt.event.WindowEvent evt) {
                formWindowStateChanged(evt);
            }
        });

        tabMain.setTabLayoutPolicy(javax.swing.JTabbedPane.SCROLL_TAB_LAYOUT);
        tabMain.setAlignmentX(0.0F);
        tabMain.setFocusCycleRoot(true);
        tabMain.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabMainMouseClicked(evt);
            }
        });
        tabMain.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                tabMainStateChanged(evt);
            }
        });

        mnuFile.setText("File");
        mnuFile.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                mnuFileMenuSelected(evt);
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
        });

        mnuFileNew.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_N, java.awt.event.InputEvent.CTRL_MASK));
        mnuFileNew.setText("New");
        mnuFileNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileNewActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileNew);

        mnuFileOpen.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_O, java.awt.event.InputEvent.CTRL_MASK));
        mnuFileOpen.setText("Open");
        mnuFileOpen.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileOpenActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileOpen);

        mnuFileSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.CTRL_MASK));
        mnuFileSave.setText("Save");
        mnuFileSave.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileSaveActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileSave);

        mnuFileSaveAs.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_MASK | java.awt.event.InputEvent.CTRL_MASK));
        mnuFileSaveAs.setText("Save As");
        mnuFileSaveAs.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileSaveAsActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileSaveAs);

        mnuFileClose.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_W, java.awt.event.InputEvent.CTRL_MASK));
        mnuFileClose.setText("Close");
        mnuFileClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileCloseActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileClose);

        mnuFileCloseAll.setText("Close All");
        mnuFileCloseAll.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileCloseAllActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileCloseAll);

        mnuFileCloseAllButActiveDocument.setText("Close All but Active Document");
        mnuFileCloseAllButActiveDocument.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileCloseAllButActiveDocumentActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileCloseAllButActiveDocument);
        mnuFile.add(mnuSeperator);

        mnuFileExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F4, java.awt.event.InputEvent.ALT_MASK));
        mnuFileExit.setText("Exit");
        mnuFileExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuFileExitActionPerformed(evt);
            }
        });
        mnuFile.add(mnuFileExit);

        mnuMain.add(mnuFile);

        mnuEdit.setText("Edit");
        mnuEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuEditActionPerformed(evt);
            }
        });
        mnuEdit.add(mnuEditSeperator);

        mnuMain.add(mnuEdit);

        mnuSearch.setText("Search");
        mnuSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSearchActionPerformed(evt);
            }
        });

        mnuSearchFind.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_F, java.awt.event.InputEvent.CTRL_MASK));
        mnuSearchFind.setText("Find");
        mnuSearchFind.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSearchFindActionPerformed(evt);
            }
        });
        mnuSearch.add(mnuSearchFind);

        mnuSearchReplace.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_H, java.awt.event.InputEvent.CTRL_MASK));
        mnuSearchReplace.setText("Replace");
        mnuSearchReplace.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSearchReplaceActionPerformed(evt);
            }
        });
        mnuSearch.add(mnuSearchReplace);

        mnuSearchGoTo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.CTRL_MASK));
        mnuSearchGoTo.setText("Go To...");
        mnuSearchGoTo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                mnuSearchGoToActionPerformed(evt);
            }
        });
        mnuSearch.add(mnuSearchGoTo);

        mnuMain.add(mnuSearch);

        setJMenuBar(mnuMain);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabMain, javax.swing.GroupLayout.DEFAULT_SIZE, 568, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(tabMain, javax.swing.GroupLayout.DEFAULT_SIZE, 408, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void mnuFileMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_mnuFileMenuSelected
        // TODO add your handling code here:
    }//GEN-LAST:event_mnuFileMenuSelected

    private void mnuFileNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileNewActionPerformed
        newTab();
    }//GEN-LAST:event_mnuFileNewActionPerformed

    private void tabMainMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabMainMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_tabMainMouseClicked

    private void formMouseDragged(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseDragged
        
    }//GEN-LAST:event_formMouseDragged

    private void formWindowStateChanged(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowStateChanged
        
    }//GEN-LAST:event_formWindowStateChanged

    private void formMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_formMouseClicked
// TODO add your handling code here:
    }//GEN-LAST:event_formMouseClicked

    private void formComponentResized(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentResized

    }//GEN-LAST:event_formComponentResized

    private void mnuFileOpenActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileOpenActionPerformed
      
        int returnVal = fc.showOpenDialog(this);
        
        if(returnVal == JFileChooser.APPROVE_OPTION){
            File file = fc.getSelectedFile();
            int t=tabMain.getTabCount();
            while(--t!=0 & !tabMain.getTitleAt(t).equals(file.getName()));
            if(t==0)
                newTab(file);
            else
                tabMain.setSelectedIndex(t);
        }    
        
            
        
    }//GEN-LAST:event_mnuFileOpenActionPerformed

    private void mnuFileSaveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileSaveActionPerformed
        try{
            if(((Tab)tabMain.getSelectedComponent()).saveFile()==false)
                mnuFileSaveAsActionPerformed(evt);
        } catch(IOException io){
            JOptionPane.showMessageDialog(this, io.getMessage(), "File Error", JOptionPane.ERROR_MESSAGE);
        }
    }//GEN-LAST:event_mnuFileSaveActionPerformed

    private void mnuFileSaveAsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileSaveAsActionPerformed
        int returnVal = fc.showSaveDialog(this);
        if (returnVal == JFileChooser.APPROVE_OPTION) {
                File file = fc.getSelectedFile();
                try{
                    ((Tab)tabMain.getSelectedComponent()).saveFile(file);
                    tabMain.setTitleAt(tabMain.getSelectedIndex(), file.getName());
                } catch(IOException ioe){
                    JOptionPane.showMessageDialog(this, ioe.getMessage(), "File Error", JOptionPane.ERROR_MESSAGE);
                }
      
                
        }
                    
    }//GEN-LAST:event_mnuFileSaveAsActionPerformed

    private void mnuFileCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileCloseActionPerformed
        if(tabMain.getTabCount()!=1)
            tabMain.remove((Tab)tabMain.getSelectedComponent());
    }//GEN-LAST:event_mnuFileCloseActionPerformed

    private void tabMainStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_tabMainStateChanged
       if(((Tab)tabMain.getSelectedComponent())!=null){
            mnuEditUndo.setAction(((Tab)tabMain.getSelectedComponent()).getUndoAction());
           mnuEditUndo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Z, java.awt.event.InputEvent.CTRL_MASK));
           mnuEditRedo.setAction(((Tab)tabMain.getSelectedComponent()).getRedoAction());
           mnuEditRedo.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_Y, java.awt.event.InputEvent.CTRL_MASK));
       }
    }//GEN-LAST:event_tabMainStateChanged

    private void mnuEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuEditActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_mnuEditActionPerformed

    private void mnuFileCloseAllActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileCloseAllActionPerformed
        tabMain.removeAll();
        newTab();
    }//GEN-LAST:event_mnuFileCloseAllActionPerformed

    private void mnuFileCloseAllButActiveDocumentActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileCloseAllButActiveDocumentActionPerformed
        for(int i=0;i<tabMain.getTabCount();i++){
            if(i==tabMain.getSelectedIndex())
                continue;
            tabMain.remove(i);
        }
    }//GEN-LAST:event_mnuFileCloseAllButActiveDocumentActionPerformed

    private void mnuSearchFindActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSearchFindActionPerformed
        new DialogFindReplace(this, false,((Tab)tabMain.getSelectedComponent()).getTextPane(),((Tab)tabMain.getSelectedComponent()).getHilit(),0);
    }//GEN-LAST:event_mnuSearchFindActionPerformed

    private void mnuSearchReplaceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSearchReplaceActionPerformed
        new DialogFindReplace(this, false,((Tab)tabMain.getSelectedComponent()).getTextPane(),((Tab)tabMain.getSelectedComponent()).getHilit(),1);
    }//GEN-LAST:event_mnuSearchReplaceActionPerformed

    private void mnuSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSearchActionPerformed
        
    }//GEN-LAST:event_mnuSearchActionPerformed

    private void mnuSearchGoToActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuSearchGoToActionPerformed
        String str1=JOptionPane.showInputDialog("Go To");
        if(str1!=null)
            try{
                setLineNumber(((Tab)tabMain.getSelectedComponent()).getTextPane(), Integer.parseInt(str1));
            }catch(Exception e){}
    }//GEN-LAST:event_mnuSearchGoToActionPerformed

    private void mnuFileExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_mnuFileExitActionPerformed
        dispose();
    }//GEN-LAST:event_mnuFileExitActionPerformed

    private void newTab(File file)
    {     
        try{
            tabMain.addTab(file.getName(),t=new Tab(file));
            tabMain.setSelectedComponent(t);
        }
        catch(IOException ioe){
           System.err.println("Error");
        }
    }
    
    
    private void newTab()
    {
        t=new Tab();
        tabMain.addTab("new " + tabCount++,t);
        tabMain.setSelectedComponent(t);
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /*
         * Set the Nimbus look and feel
         */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /*
         * If Nimbus (introduced in Java SE 6) is not available, stay with the
         * default look and feel. For details see
         * http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CodeEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CodeEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CodeEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CodeEditor.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /*
         * Create and display the form
         */
        java.awt.EventQueue.invokeLater(new Runnable() {

            public void run() {
                new CodeEditor().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenu mnuEdit;
    private javax.swing.JPopupMenu.Separator mnuEditSeperator;
    private javax.swing.JMenu mnuFile;
    private javax.swing.JMenuItem mnuFileClose;
    private javax.swing.JMenuItem mnuFileCloseAll;
    private javax.swing.JMenuItem mnuFileCloseAllButActiveDocument;
    private javax.swing.JMenuItem mnuFileExit;
    private javax.swing.JMenuItem mnuFileNew;
    private javax.swing.JMenuItem mnuFileOpen;
    private javax.swing.JMenuItem mnuFileSave;
    private javax.swing.JMenuItem mnuFileSaveAs;
    private javax.swing.JMenuBar mnuMain;
    private javax.swing.JMenu mnuSearch;
    private javax.swing.JMenuItem mnuSearchFind;
    private javax.swing.JMenuItem mnuSearchGoTo;
    private javax.swing.JMenuItem mnuSearchReplace;
    private javax.swing.JPopupMenu.Separator mnuSeperator;
    private javax.swing.JTabbedPane tabMain;
    // End of variables declaration//GEN-END:variables
    private javax.swing.JMenuItem mnuEditUndo;
    private javax.swing.JMenuItem mnuEditRedo;
}
